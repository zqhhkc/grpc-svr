// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: pb/pb.proto

// import "google/protobuf/timestamp.proto";

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IMCoreStatus int32

const (
	IMCoreStatus_StatusSucc             IMCoreStatus = 0
	IMCoreStatus_AccountNotFound        IMCoreStatus = 1
	IMCoreStatus_AccountBan             IMCoreStatus = 2
	IMCoreStatus_AccountLogOut          IMCoreStatus = 3
	IMCoreStatus_Failed                 IMCoreStatus = 4
	IMCoreStatus_FriendAccountBan       IMCoreStatus = 5
	IMCoreStatus_AccountAuthFailed      IMCoreStatus = 6
	IMCoreStatus_AccountConnError       IMCoreStatus = 7
	IMCoreStatus_FriendNotFound         IMCoreStatus = 101
	IMCoreStatus_SendMessageTimeOut     IMCoreStatus = 201
	IMCoreStatus_SendMessageNativeExist IMCoreStatus = 202
	IMCoreStatus_AccountInLoginQueue    IMCoreStatus = 301
	IMCoreStatus_ArgumentCheckFailed    IMCoreStatus = 1001
	IMCoreStatus_ServiceInternalError   IMCoreStatus = 1501
	// db error
	IMCoreStatus_DataBaseError IMCoreStatus = 2001
)

// Enum value maps for IMCoreStatus.
var (
	IMCoreStatus_name = map[int32]string{
		0:    "StatusSucc",
		1:    "AccountNotFound",
		2:    "AccountBan",
		3:    "AccountLogOut",
		4:    "Failed",
		5:    "FriendAccountBan",
		6:    "AccountAuthFailed",
		7:    "AccountConnError",
		101:  "FriendNotFound",
		201:  "SendMessageTimeOut",
		202:  "SendMessageNativeExist",
		301:  "AccountInLoginQueue",
		1001: "ArgumentCheckFailed",
		1501: "ServiceInternalError",
		2001: "DataBaseError",
	}
	IMCoreStatus_value = map[string]int32{
		"StatusSucc":             0,
		"AccountNotFound":        1,
		"AccountBan":             2,
		"AccountLogOut":          3,
		"Failed":                 4,
		"FriendAccountBan":       5,
		"AccountAuthFailed":      6,
		"AccountConnError":       7,
		"FriendNotFound":         101,
		"SendMessageTimeOut":     201,
		"SendMessageNativeExist": 202,
		"AccountInLoginQueue":    301,
		"ArgumentCheckFailed":    1001,
		"ServiceInternalError":   1501,
		"DataBaseError":          2001,
	}
)

func (x IMCoreStatus) Enum() *IMCoreStatus {
	p := new(IMCoreStatus)
	*p = x
	return p
}

func (x IMCoreStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IMCoreStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_pb_proto_enumTypes[0].Descriptor()
}

func (IMCoreStatus) Type() protoreflect.EnumType {
	return &file_pb_pb_proto_enumTypes[0]
}

func (x IMCoreStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IMCoreStatus.Descriptor instead.
func (IMCoreStatus) EnumDescriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{0}
}

type AccountType int32

const (
	AccountType_AccountTypeMessenger AccountType = 0 // messenger account
	AccountType_AccountTypeLine      AccountType = 1 // line account
	AccountType_AccountTypeWhatsapp  AccountType = 2
	AccountType_AccountTypeZalo      AccountType = 3
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "AccountTypeMessenger",
		1: "AccountTypeLine",
		2: "AccountTypeWhatsapp",
		3: "AccountTypeZalo",
	}
	AccountType_value = map[string]int32{
		"AccountTypeMessenger": 0,
		"AccountTypeLine":      1,
		"AccountTypeWhatsapp":  2,
		"AccountTypeZalo":      3,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_pb_proto_enumTypes[1].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_pb_pb_proto_enumTypes[1]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{1}
}

type MessageAcknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stamp   int64  `protobuf:"varint,1,opt,name=Stamp,proto3" json:"Stamp,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"` // hint text for human read
}

func (x *MessageAcknowledge) Reset() {
	*x = MessageAcknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAcknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAcknowledge) ProtoMessage() {}

func (x *MessageAcknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAcknowledge.ProtoReflect.Descriptor instead.
func (*MessageAcknowledge) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{0}
}

func (x *MessageAcknowledge) GetStamp() int64 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

func (x *MessageAcknowledge) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IMAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IMType     AccountType `protobuf:"varint,1,opt,name=IMType,proto3,enum=pb.AccountType" json:"IMType,omitempty"`
	AccountID  string      `protobuf:"bytes,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"` // account main field
	UserName   string      `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`   // username = loginname@business   username is unique key
	Password   string      `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	ExtendInfo []byte      `protobuf:"bytes,5,opt,name=ExtendInfo,proto3" json:"ExtendInfo,omitempty"`
	AccountUID string      `protobuf:"bytes,6,opt,name=AccountUID,proto3" json:"AccountUID,omitempty"`
	BOT        string      `protobuf:"bytes,7,opt,name=BOT,proto3" json:"BOT,omitempty"`
}

func (x *IMAccount) Reset() {
	*x = IMAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMAccount) ProtoMessage() {}

func (x *IMAccount) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMAccount.ProtoReflect.Descriptor instead.
func (*IMAccount) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{1}
}

func (x *IMAccount) GetIMType() AccountType {
	if x != nil {
		return x.IMType
	}
	return AccountType_AccountTypeMessenger
}

func (x *IMAccount) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *IMAccount) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *IMAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *IMAccount) GetExtendInfo() []byte {
	if x != nil {
		return x.ExtendInfo
	}
	return nil
}

func (x *IMAccount) GetAccountUID() string {
	if x != nil {
		return x.AccountUID
	}
	return ""
}

func (x *IMAccount) GetBOT() string {
	if x != nil {
		return x.BOT
	}
	return ""
}

// insert account
type AccountInsertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *IMAccount `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *AccountInsertReq) Reset() {
	*x = AccountInsertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInsertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInsertReq) ProtoMessage() {}

func (x *AccountInsertReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInsertReq.ProtoReflect.Descriptor instead.
func (*AccountInsertReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{2}
}

func (x *AccountInsertReq) GetAccount() *IMAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

type AccountInsertRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack       *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
	AccountID string              `protobuf:"bytes,3,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *AccountInsertRes) Reset() {
	*x = AccountInsertRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInsertRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInsertRes) ProtoMessage() {}

func (x *AccountInsertRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInsertRes.ProtoReflect.Descriptor instead.
func (*AccountInsertRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{3}
}

func (x *AccountInsertRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *AccountInsertRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *AccountInsertRes) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

// update account
type AccountUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account          *IMAccount `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	UpdatePassword   bool       `protobuf:"varint,2,opt,name=UpdatePassword,proto3" json:"UpdatePassword,omitempty"`
	UpdateJSONData   bool       `protobuf:"varint,3,opt,name=UpdateJSONData,proto3" json:"UpdateJSONData,omitempty"`
	UpdateAccountUID bool       `protobuf:"varint,4,opt,name=UpdateAccountUID,proto3" json:"UpdateAccountUID,omitempty"`
	UpdateBOT        bool       `protobuf:"varint,5,opt,name=UpdateBOT,proto3" json:"UpdateBOT,omitempty"`
}

func (x *AccountUpdateReq) Reset() {
	*x = AccountUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdateReq) ProtoMessage() {}

func (x *AccountUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdateReq.ProtoReflect.Descriptor instead.
func (*AccountUpdateReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{4}
}

func (x *AccountUpdateReq) GetAccount() *IMAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AccountUpdateReq) GetUpdatePassword() bool {
	if x != nil {
		return x.UpdatePassword
	}
	return false
}

func (x *AccountUpdateReq) GetUpdateJSONData() bool {
	if x != nil {
		return x.UpdateJSONData
	}
	return false
}

func (x *AccountUpdateReq) GetUpdateAccountUID() bool {
	if x != nil {
		return x.UpdateAccountUID
	}
	return false
}

func (x *AccountUpdateReq) GetUpdateBOT() bool {
	if x != nil {
		return x.UpdateBOT
	}
	return false
}

type AccountUpdateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack    *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
}

func (x *AccountUpdateRes) Reset() {
	*x = AccountUpdateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdateRes) ProtoMessage() {}

func (x *AccountUpdateRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdateRes.ProtoReflect.Descriptor instead.
func (*AccountUpdateRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{5}
}

func (x *AccountUpdateRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *AccountUpdateRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

// delete account
type AccountDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *AccountDeleteReq) Reset() {
	*x = AccountDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDeleteReq) ProtoMessage() {}

func (x *AccountDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDeleteReq.ProtoReflect.Descriptor instead.
func (*AccountDeleteReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{6}
}

func (x *AccountDeleteReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type AccountDeleteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack    *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
}

func (x *AccountDeleteRes) Reset() {
	*x = AccountDeleteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDeleteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDeleteRes) ProtoMessage() {}

func (x *AccountDeleteRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDeleteRes.ProtoReflect.Descriptor instead.
func (*AccountDeleteRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{7}
}

func (x *AccountDeleteRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *AccountDeleteRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

// query account
type AccountQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *AccountQueryReq) Reset() {
	*x = AccountQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountQueryReq) ProtoMessage() {}

func (x *AccountQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountQueryReq.ProtoReflect.Descriptor instead.
func (*AccountQueryReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{8}
}

func (x *AccountQueryReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type AccountQueryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack     *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
	Account *IMAccount          `protobuf:"bytes,3,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *AccountQueryRes) Reset() {
	*x = AccountQueryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountQueryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountQueryRes) ProtoMessage() {}

func (x *AccountQueryRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountQueryRes.ProtoReflect.Descriptor instead.
func (*AccountQueryRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{9}
}

func (x *AccountQueryRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *AccountQueryRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *AccountQueryRes) GetAccount() *IMAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

// account login
type AccountLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *AccountLoginReq) Reset() {
	*x = AccountLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLoginReq) ProtoMessage() {}

func (x *AccountLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLoginReq.ProtoReflect.Descriptor instead.
func (*AccountLoginReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{10}
}

func (x *AccountLoginReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type AccountLoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack    *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
}

func (x *AccountLoginRes) Reset() {
	*x = AccountLoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLoginRes) ProtoMessage() {}

func (x *AccountLoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLoginRes.ProtoReflect.Descriptor instead.
func (*AccountLoginRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{11}
}

func (x *AccountLoginRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *AccountLoginRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

// account logout
type AccountLogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *AccountLogoutReq) Reset() {
	*x = AccountLogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogoutReq) ProtoMessage() {}

func (x *AccountLogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogoutReq.ProtoReflect.Descriptor instead.
func (*AccountLogoutReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{12}
}

func (x *AccountLogoutReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type AccountLogoutRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack    *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
}

func (x *AccountLogoutRes) Reset() {
	*x = AccountLogoutRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLogoutRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogoutRes) ProtoMessage() {}

func (x *AccountLogoutRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogoutRes.ProtoReflect.Descriptor instead.
func (*AccountLogoutRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{13}
}

func (x *AccountLogoutRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *AccountLogoutRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

// list account
type ListAllAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqHi string `protobuf:"bytes,1,opt,name=ReqHi,proto3" json:"ReqHi,omitempty"`
}

func (x *ListAllAccountReq) Reset() {
	*x = ListAllAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllAccountReq) ProtoMessage() {}

func (x *ListAllAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllAccountReq.ProtoReflect.Descriptor instead.
func (*ListAllAccountReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{14}
}

func (x *ListAllAccountReq) GetReqHi() string {
	if x != nil {
		return x.ReqHi
	}
	return ""
}

type ListAllAccountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack      *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
	Accounts []*IMAccount        `protobuf:"bytes,3,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
}

func (x *ListAllAccountRes) Reset() {
	*x = ListAllAccountRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllAccountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllAccountRes) ProtoMessage() {}

func (x *ListAllAccountRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllAccountRes.ProtoReflect.Descriptor instead.
func (*ListAllAccountRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{15}
}

func (x *ListAllAccountRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *ListAllAccountRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *ListAllAccountRes) GetAccounts() []*IMAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// list this bot wroking account
type QueryBotWorkingAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqHi string `protobuf:"bytes,1,opt,name=ReqHi,proto3" json:"ReqHi,omitempty"` // no use
}

func (x *QueryBotWorkingAccountReq) Reset() {
	*x = QueryBotWorkingAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBotWorkingAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBotWorkingAccountReq) ProtoMessage() {}

func (x *QueryBotWorkingAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBotWorkingAccountReq.ProtoReflect.Descriptor instead.
func (*QueryBotWorkingAccountReq) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{16}
}

func (x *QueryBotWorkingAccountReq) GetReqHi() string {
	if x != nil {
		return x.ReqHi
	}
	return ""
}

type QueryBotWorkingAccountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   IMCoreStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.IMCoreStatus" json:"Status,omitempty"`
	Ack      *MessageAcknowledge `protobuf:"bytes,2,opt,name=Ack,proto3" json:"Ack,omitempty"`
	Accounts []*IMAccount        `protobuf:"bytes,3,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
}

func (x *QueryBotWorkingAccountRes) Reset() {
	*x = QueryBotWorkingAccountRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_pb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBotWorkingAccountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBotWorkingAccountRes) ProtoMessage() {}

func (x *QueryBotWorkingAccountRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_pb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBotWorkingAccountRes.ProtoReflect.Descriptor instead.
func (*QueryBotWorkingAccountRes) Descriptor() ([]byte, []int) {
	return file_pb_pb_proto_rawDescGZIP(), []int{17}
}

func (x *QueryBotWorkingAccountRes) GetStatus() IMCoreStatus {
	if x != nil {
		return x.Status
	}
	return IMCoreStatus_StatusSucc
}

func (x *QueryBotWorkingAccountRes) GetAck() *MessageAcknowledge {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *QueryBotWorkingAccountRes) GetAccounts() []*IMAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

var File_pb_pb_proto protoreflect.FileDescriptor

var file_pb_pb_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0x44, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x49, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x49, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x4f, 0x54, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x42, 0x4f, 0x54, 0x22, 0x3b, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x4d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d,
	0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xd5, 0x01, 0x0a, 0x10, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x27, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x53, 0x4f, 0x4e, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x53, 0x4f, 0x4e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x4f,
	0x54, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x4f, 0x54, 0x22, 0x66, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x22, 0x30, 0x0a, 0x10, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x10,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52,
	0x03, 0x41, 0x63, 0x6b, 0x22, 0x2f, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x27, 0x0a,
	0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x22, 0x30,
	0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x22, 0x66, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x43, 0x6f, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28,
	0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x22, 0x29, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x65, 0x71, 0x48, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65,
	0x71, 0x48, 0x69, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x29, 0x0a,
	0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x71, 0x48, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x71, 0x48, 0x69, 0x22, 0x9a, 0x01, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x29, 0x0a,
	0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x4d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2a, 0xd2, 0x02, 0x0a, 0x0c, 0x49, 0x4d, 0x43,
	0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x75, 0x63, 0x63, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6e, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x07,
	0x12, 0x12, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0x65, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x10, 0xc9, 0x01, 0x12, 0x1b, 0x0a,
	0x16, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0xca, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x10, 0xad, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xe9, 0x07, 0x12, 0x19,
	0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xdd, 0x0b, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x61, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xd1, 0x0f, 0x2a, 0x6a, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x57, 0x68, 0x61, 0x74, 0x73, 0x61,
	0x70, 0x70, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x5a, 0x61, 0x6c, 0x6f, 0x10, 0x03, 0x32, 0xca, 0x02, 0x0a, 0x0d, 0x49, 0x4d,
	0x4d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_pb_proto_rawDescOnce sync.Once
	file_pb_pb_proto_rawDescData = file_pb_pb_proto_rawDesc
)

func file_pb_pb_proto_rawDescGZIP() []byte {
	file_pb_pb_proto_rawDescOnce.Do(func() {
		file_pb_pb_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_pb_proto_rawDescData)
	})
	return file_pb_pb_proto_rawDescData
}

var file_pb_pb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pb_pb_proto_goTypes = []interface{}{
	(IMCoreStatus)(0),                 // 0: pb.IMCoreStatus
	(AccountType)(0),                  // 1: pb.AccountType
	(*MessageAcknowledge)(nil),        // 2: pb.MessageAcknowledge
	(*IMAccount)(nil),                 // 3: pb.IMAccount
	(*AccountInsertReq)(nil),          // 4: pb.AccountInsertReq
	(*AccountInsertRes)(nil),          // 5: pb.AccountInsertRes
	(*AccountUpdateReq)(nil),          // 6: pb.AccountUpdateReq
	(*AccountUpdateRes)(nil),          // 7: pb.AccountUpdateRes
	(*AccountDeleteReq)(nil),          // 8: pb.AccountDeleteReq
	(*AccountDeleteRes)(nil),          // 9: pb.AccountDeleteRes
	(*AccountQueryReq)(nil),           // 10: pb.AccountQueryReq
	(*AccountQueryRes)(nil),           // 11: pb.AccountQueryRes
	(*AccountLoginReq)(nil),           // 12: pb.AccountLoginReq
	(*AccountLoginRes)(nil),           // 13: pb.AccountLoginRes
	(*AccountLogoutReq)(nil),          // 14: pb.AccountLogoutReq
	(*AccountLogoutRes)(nil),          // 15: pb.AccountLogoutRes
	(*ListAllAccountReq)(nil),         // 16: pb.ListAllAccountReq
	(*ListAllAccountRes)(nil),         // 17: pb.ListAllAccountRes
	(*QueryBotWorkingAccountReq)(nil), // 18: pb.QueryBotWorkingAccountReq
	(*QueryBotWorkingAccountRes)(nil), // 19: pb.QueryBotWorkingAccountRes
}
var file_pb_pb_proto_depIdxs = []int32{
	1,  // 0: pb.IMAccount.IMType:type_name -> pb.AccountType
	3,  // 1: pb.AccountInsertReq.Account:type_name -> pb.IMAccount
	0,  // 2: pb.AccountInsertRes.Status:type_name -> pb.IMCoreStatus
	2,  // 3: pb.AccountInsertRes.Ack:type_name -> pb.MessageAcknowledge
	3,  // 4: pb.AccountUpdateReq.Account:type_name -> pb.IMAccount
	0,  // 5: pb.AccountUpdateRes.Status:type_name -> pb.IMCoreStatus
	2,  // 6: pb.AccountUpdateRes.Ack:type_name -> pb.MessageAcknowledge
	0,  // 7: pb.AccountDeleteRes.Status:type_name -> pb.IMCoreStatus
	2,  // 8: pb.AccountDeleteRes.Ack:type_name -> pb.MessageAcknowledge
	0,  // 9: pb.AccountQueryRes.Status:type_name -> pb.IMCoreStatus
	2,  // 10: pb.AccountQueryRes.Ack:type_name -> pb.MessageAcknowledge
	3,  // 11: pb.AccountQueryRes.Account:type_name -> pb.IMAccount
	0,  // 12: pb.AccountLoginRes.Status:type_name -> pb.IMCoreStatus
	2,  // 13: pb.AccountLoginRes.Ack:type_name -> pb.MessageAcknowledge
	0,  // 14: pb.AccountLogoutRes.Status:type_name -> pb.IMCoreStatus
	2,  // 15: pb.AccountLogoutRes.Ack:type_name -> pb.MessageAcknowledge
	0,  // 16: pb.ListAllAccountRes.Status:type_name -> pb.IMCoreStatus
	2,  // 17: pb.ListAllAccountRes.Ack:type_name -> pb.MessageAcknowledge
	3,  // 18: pb.ListAllAccountRes.Accounts:type_name -> pb.IMAccount
	0,  // 19: pb.QueryBotWorkingAccountRes.Status:type_name -> pb.IMCoreStatus
	2,  // 20: pb.QueryBotWorkingAccountRes.Ack:type_name -> pb.MessageAcknowledge
	3,  // 21: pb.QueryBotWorkingAccountRes.Accounts:type_name -> pb.IMAccount
	4,  // 22: pb.IMMainService.InsertAccount:input_type -> pb.AccountInsertReq
	6,  // 23: pb.IMMainService.UpdateAccount:input_type -> pb.AccountUpdateReq
	8,  // 24: pb.IMMainService.DeleteAccount:input_type -> pb.AccountDeleteReq
	10, // 25: pb.IMMainService.QueryAccount:input_type -> pb.AccountQueryReq
	16, // 26: pb.IMMainService.ListAllAccount:input_type -> pb.ListAllAccountReq
	5,  // 27: pb.IMMainService.InsertAccount:output_type -> pb.AccountInsertRes
	7,  // 28: pb.IMMainService.UpdateAccount:output_type -> pb.AccountUpdateRes
	9,  // 29: pb.IMMainService.DeleteAccount:output_type -> pb.AccountDeleteRes
	11, // 30: pb.IMMainService.QueryAccount:output_type -> pb.AccountQueryRes
	17, // 31: pb.IMMainService.ListAllAccount:output_type -> pb.ListAllAccountRes
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_pb_pb_proto_init() }
func file_pb_pb_proto_init() {
	if File_pb_pb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_pb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAcknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInsertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInsertRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDeleteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountQueryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLogoutRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllAccountRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBotWorkingAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_pb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBotWorkingAccountRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_pb_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_pb_proto_goTypes,
		DependencyIndexes: file_pb_pb_proto_depIdxs,
		EnumInfos:         file_pb_pb_proto_enumTypes,
		MessageInfos:      file_pb_pb_proto_msgTypes,
	}.Build()
	File_pb_pb_proto = out.File
	file_pb_pb_proto_rawDesc = nil
	file_pb_pb_proto_goTypes = nil
	file_pb_pb_proto_depIdxs = nil
}
